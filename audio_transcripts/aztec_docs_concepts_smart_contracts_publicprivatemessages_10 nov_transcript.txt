 Ok, 10th of November we proceed with the documentation of astig. Let's go, smart contracts today. Right now, ok? Hmm. Ok, smart contracts. Hmm. Smart contracts in astig are privacy first. And can include both public and private amendments. They are written in Northeering Work or astig.nl. And hello, hi level programs, can be converted into Zika circuits. On this page, you will learn how astigly it is smart contracts for privacy and efficiency. Hello, and structure of smart contracts in astig. Hmm. Intro into more programming language and how it converts to circuits. The astig can. Transaction flow in controlled reality. Everything is a fucking smart contract on astig. Intro into two programming language and how it converts to circuits. The astig can. Transaction flow in controlled reality. Intro into two programming language and how it converts to circuits. Intro into two programming language and how it converts to circuits. Intro into two programming language and how it converts to circuits. Roll and structure. Smart contracts in astig. Intro into two programming language and how it converts to circuits. Smart contracts is defined as a set of programming and value. The astig is defined as a set of programming language and value. Intro into two programming language and value. Roll and structure of smart contracts will be an astig. Intro into two programming language and value. Roll and structure of smart contracts in astig. Intro into more programming language. How it converts to circuits. The astig can. Transaction flow and confidentiality. Intro into two programming language and value. Intro into two programming language and value. Intro into two programming language and value. Intro into two programming language and value. On this page you learn how astig is good smart contract for privacy and efficiency. Roll and structure of smart contracts with an astig. Intro into two programming language and value. The astig can. The astig can. Transaction flow and confidentiality. Intro into two programming language and value. Defining the astig smart contracts. The smart contract is defined as a self set of public and private functions written as Masterty. These functions operate on public and private stores state stored by contract. I see I see I see I see everything is a content. Every thing is represented as a Z. Every thing. Each function is represented as a Z. Every one of these functions is represented by the set of functions. The math is not verification key. The contract is uniquely described by the set of the functions keys. And stored in the astigastic contract stream. The math is represented by the set of functions key. The math is represented by the set of functions key. Based on rust, the goal is to present an idiotmatic way of writing private smart contracts that are spending a real film developers. Nor is interactive development in features such as contracts or function in English culture. Nor is a programming language designed for converting high-level programs into the set of its verification piece and storing the step on test sheet. So each function is represented as a ZK's navigation key where the contract is uniquely described by the set of its verification piece and stored in the state contract sheet. Nor is a programming language designed for converting high-level programs into ZK circuits. So each function is a ZK's navigation key. This function is represented as a ZK's navigation key where the contract is uniquely described by a set of its verification keys. Where the contract is uniquely described where the set of its verification keys are. So the contract is uniquely defined by the set of its functions. The code contract is uniquely described by the set of its verification keys and stored in the state contract sheet. There is an state contract string. Nor is a redundant language designed for converting high-level programs into ZK circuits. Based on trust, the goal is to present an idiomatic way of writing private contracts that is familiar to Ethereum developers. Nor is interactive development and features such as contracts functions and storage values. The end goal is a language that is intuitive to use for developers with no cryptocurrency knowledge. And in how world developers easily write program in the book Five It's Mark contracts. There are no plans for Ethereum compatibility or supports for Ethereum landscape. The privacy first nature of Aztec is fundamentally incompatible with the EVM architecture and the digital design. In addition, the heavy use of client-side proof construction makes this impractical. The EVM architecture and solid-rooted semantics in addition, the heavy use of client-side proof construction makes this impractical. There are no plans for Ethereum compatibility or supports for liquidity in Aztec. The EVM architecture is fundamentally incompatible with the VM architecture and solid-rooted semantics. For now, we want to add the words for now. We never know where ZK proofs could agree with the privacy is fundamentally incompatible with the EVM architecture. I'm not so sure about the heavy use of client-side proof construction and how that evolves in the future and how it would be more efficient even for inefficiency of the EVM architecture. Let's go to the contract department. So, it is uniquely a contract. This might want to be easily defined by a set of ZK's knock verification keys. That's a wonderful. Every function is easily defined by ZK's knock verification key. The latest information about contract deployment has moved through the protocolification company here. So, I want to look at the resources which is protocol-specific in some places. It makes sense especially the main contract deployment and transactions. I want to find something that I'm not afraid but I need to go back to the new. So, when you're so fast, the sense namely, what about specs? Are you important? The fact that we don't like is agreed. Yes. But, me. card knows if this application means maintaining access to speed, everything, level wheat, from wheat will yield. Local execution proposition transactional Yearning put conditions. By good contract deployment contract losses, okay. Well of course I'm interested in all the balls. And fucking calls, synchronous. In Q batched static unconstraineder interlay calls. I'll go and spot contracts. Data availability. Hmm. I'll just take up on my command. We saw all of your calculations. Fuck. To compile contracts. To district. Wow. I stole all of the love this architecture. This is real. My goodness. Fuck. Okay. By good contract. Okay. I want to look at all these things. But not very far. By good contract. By good contract. I'll just go ahead. I will just set it up. Man. This is so good. Yes and peace. He dos. This way in gas and peace in food. Transaction setup and tear down. Colonel tracking peace schedule published. Gas and feed data. Fuck. Fuck. Yeah. Important. Important. Important. Descentalization. Notes and actors. Oh. Gorons and a post. A stick block production. It'll be in a good. Circuits. I would come to circuit. I would come to circuit. Yeah. This is a. I know interfaces. Okay. Hold up circuits. Private. Travel. These guys. My. Testically. Okay. So. Important for later. I won't look at this right now. Let's go. You see how to deploy contract in practice. Check out the. The information contract deployment has moved. The protocol is. Well. Okay. Because. I read about. Contract. Class. In. The wallet interface. How can you to understand what contract. Class is. Therefore. I mean that. One. Page. Oh. Gorons. The. Contract deployment contracts in a stick. I employed. As instances. I can. The. The. The. The. The. The. The. The. The. The. The. The. The. The. The. contracts in Aztecs are deployed as instances of a contract plus, deploying a new contract then requires first registering the class if it has not been registered before. Ah, far. Yeah. Contracts in estates are deployed as instance of a contract class, deploying a new contract, every fucking contract is a new class. And multiple instances of the same class, you know, the same contract can be deployed of course can be deployed. Multiplication in the global state and are created where a call to a canonical class registry or instant contract respectively. Oh, gigabrains. Oh, gigabrains are pasted. Oh, gigabrains. Oh, this is all I want to know. We'll want to know anything else. Yeah, that's it. We'll come back light on. Oh, yes, of course we did not get it now. No, no, no, no, no, no, no, no, no. Two many interfaces, code interfaces, type interfaces. You will not be able to get it now. Okay, understood what the class contract classes. You see how to deploy a contract in practice, check out the depth development of course I would have to do that. I will do that. Contract structure. The contract is a collection of course system state variables and functions which may manipulate these variables. Functions and state variables within a contract scope are said to belong to that contract. The contract can only access and modify another contract state. It's full state. If contract wishes to access another contract state, must make it called the went external function of the other contract. There will be nothing that happens on the Jerry you have to look for. Let's check out the contract needs to be called. Oh. Shit. The contract is called the persistent state variables and functions, persistent state variables and functions which may manipulate these variables. The functions and state variables within a contract is called or said to belong to that contract. The contract can only access and modify the state. The contract can only access and modify the contract. The contract can only access and modify the state variables. If a contract wishes to access or modify another contract state, it must make call to an external function of the other contract for anything happen in a specific network. This is what if it is a private function and then stop happens only as technical, which it should be noted in the file free. The contract may be declared and given a name using the contract keyword. The contract may contract, write a token, some arcs, write a close, we know that within the function and then flower bracket open, within the flower brackets it said imports, common imports, common storage, and it said common functions. These are the three main important parts. Direct free structure. So there is no main, there is no main, if you are coming from no, you would expect the main, there is no main in an aspect smart contract. Direct free structure. Here is a common layout for basic aspect. My Aztec contract project is Rc main, Nargo, 2ml, I know this structure by now, very well. Your contract, back engine dependency management, see the vanilla, no more docs for more important packages. Can you, you can review the structure of a complete contract into a contract? Yeah, I will go to the token to contract tutorial. Next, defining functions, direct free structure, defining functions. If you wear a solidity there, all of this, you would breeze through breeze, but me, who is not a solidity there, will know breeze through this, will struggle through this. Let's go, defining functions. Let's play Cbless by Tlirihang again. We play this 36 minute console, let's go back to our docs. Functions serve as the building blocks of smart contracts. No debates on this. Functions can be either public, that is, they are publicly available for anyone to see and can directly interact with public state or private, meaning they are executed completely on the PC. We'd more about how private functions work here. For more practical, guide of using multiple types of functions, follow the token tutorial. Currently, any function is mutable in the sense that it might alter state, however, we also support static calls, similarly to EVM. The static call is essentially called that does not alter state, it keeps static state, it's like, a unit error this time. and can directly interact with for the state of private, meaning they are executed completely franchise with the XE read more about how far it functions over here. For a more practical driver using multiple types of functions all of the computer. Right now, any function is needed by the sense that it might all be stayed. Okay. However, we also support static calls in the previous video. Since we don't know the video, we don't know static calls are. A static call is essentially the call that does not all the state. It keeps it static. Or is it a unconstrained function? Is it that? Let's go. Initialize your functions. Smart contacts may have one or a minimum user functions which are called when the contract is typically a day. Initialize your cellular functions that set an initialize the lag for the contract. Contract can only be initialized once and contract functions can only be called after the contract has been initialized. Much like a constructor. However, if a contract defines no initializers, it can be called at any time. Additionally, you can define as many initializer functions in a contract as you want both private and public. So, when it's deployed, equivalent, you realize the functions like a constructor. Initializers are regular functions that set an initialize the lag. For that contract instance, which is nullified. Contracts can only be initialized once, contract functions. When all the defaults are the contract has been initialized, much like a constructor. However, if a contract is not tracked, it can't be small initializers. That's all. Okay. We get what initializers are. However, if a contract defines no initialize, it can be called at any time. What can be called at any time? Okay. The function contract functions can only be called at any time. Otherwise, if there is initialize function, then functions can only be called after initializer. What are the conditioners? Additionally, you can define as many initializer functions in a contract as you want both private and public. What private and public? Additionally, you can define as many initializer functions in a contract as you want both private and public. Oracles. There are also special oracle functions, which can get data from outside of this smart contract. That's what for a community. The context of plastic or Excel is often used to get user provided in books. We are open in the file in the case of an orphan. That's what it is to learn more about functions. How function visibility works inastic? How to write an initializer function? How to write a initializer function? How to write a initializer function? How to write a initializer function? How to write a initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How functions work? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How can two different users build proofs? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function? How to write an initializer function?